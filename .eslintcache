[{"E:\\inst-clone\\src\\App.js":"1","E:\\inst-clone\\src\\Post.js":"2","E:\\inst-clone\\src\\index.js":"3","E:\\inst-clone\\src\\reportWebVitals.js":"4","E:\\inst-clone\\src\\firebase.js":"5","E:\\inst-clone\\src\\ImageUpload.js":"6"},{"size":5899,"mtime":1607616825855,"results":"7","hashOfConfig":"8"},{"size":2919,"mtime":1607616838780,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1606316649666,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1606316649666,"results":"11","hashOfConfig":"8"},{"size":660,"mtime":1606335499668,"results":"12","hashOfConfig":"8"},{"size":2340,"mtime":1607606055485,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oxefbx",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"E:\\inst-clone\\src\\App.js",[],"E:\\inst-clone\\src\\Post.js",["29"],"import './Post.css';\n\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from './firebase';\nimport { Button, Input } from \"@material-ui/core\";\nimport firebase from 'firebase';\n\n\nfunction Post({ postId, username, caption, imageUrl, user}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n\n    useEffect(() => {\n        let unsubscribe;\n        if(postId) {\n            unsubscribe = db\n            .collection(\"post\")\n            .doc(postId)\n            .collection('comments')\n            .orderBy('timestamp', 'desc')\n            .onSnapshot((snapshot) => {\n                setComments(snapshot.docs.map(doc => doc.data()))\n            });\n        }\n        return () => {\n            unsubscribe();\n        };\n    }, [postId]);\n\n    const postComment = (event) => {\n        event.preventDefault();\n        \n        console.log('user ', user)\n        \n        db.collection('post')\n        .doc(postId)\n        .collection('comments')\n        .add({\n            text:comment,\n            username: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setComment('');\n    }\n\n    return (\n        <div className=\"post\" >\n            <div \n            className=\"post__header\"\n            >   \n            <Avatar\n            className=\"post__avatar\"\n            alt=\"cleverpro\"\n            src=\"/static/images/avatar/1.png\"\n            />\n            <h3> {username} </h3>\n            </div>\n            {/* header -> Avatar -> Username */}\n\n            <img \n            className=\"post__image\"\n            src={imageUrl}\n            alt=\"No Img\"\n            />\n            \n            <h4 className=\"post__text\"> <strong> {username} </strong> : {caption} </h4>\n\n            {/* Comment Section */}\n\n            <div className=\"Post__commentsSection\">\n                { comments.map((comment) => (\n                    <p>\n                        <strong> {comment.username} </strong> {comment.text}\n                    </p>\n                ))}\n            </div>\n            { user && (      \n                <form className=\"Post__commentbox\">\n                    <input\n                        className=\"Post__commentInput\"\n                        type=\"text\"\n                        placeholder=\"Add a comment\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                    />\n                    <Button\n                        disabled={!comment}\n                        className=\"Post__button\"\n                        type=\"submit\"\n                        onClick={postComment}\n                    >   \n                        Post\n                    </Button>\n                </form>\n                )}\n            \n\n\n        \n        </div>\n    )\n}\n\nexport default Post\n",["30","31"],"E:\\inst-clone\\src\\index.js",[],"E:\\inst-clone\\src\\reportWebVitals.js",[],"E:\\inst-clone\\src\\firebase.js",[],"E:\\inst-clone\\src\\ImageUpload.js",["32"],"import React, { useState }  from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { storage, db } from './firebase';\r\nimport firebase from 'firebase';\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload({username}) {\r\n    const [caption , setCaption] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [progress, setProgress] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\r\n            'state_changed',\r\n            (snapshot) => {\r\n                // progress function\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n            setProgress(progress);\r\n            },\r\n            (error) => {\r\n                // error function .......\r\n                alert(error.message);\r\n            },\r\n            () => {\r\n                storage.ref('images')\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    setUrl(url);\r\n                    db.collection('post').add({\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption: caption,\r\n                        imageUrl: url,\r\n                        username: username\r\n                    })\r\n                    setProgress(0);\r\n                    setImage(null);\r\n                    setUrl('')\r\n                    setCaption('')\r\n                })\r\n            }\r\n        )\r\n    };\r\n    \r\n    return(\r\n        <div class=\"imageUpload\" >\r\n            <progress class=\"Imageupload__progress\" value={progress} max=\"100\" ></progress>\r\n            <input type=\"text\" \r\n            placeholder=\"Enter a caption.....\" \r\n            onChange={event => setCaption(event.target.value)}\r\n            value={caption} />\r\n            <input type=\"file\" onChange={handleChange}/>\r\n            <Button class=\"Imageupload__button\" onClick={handleUpload}>\r\n                Upload\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload",{"ruleId":"33","severity":1,"message":"34","line":6,"column":18,"nodeType":"35","messageId":"36","endLine":6,"endColumn":23},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"33","severity":1,"message":"41","line":11,"column":12,"nodeType":"35","messageId":"36","endLine":11,"endColumn":15},"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]